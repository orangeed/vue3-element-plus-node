"use strict";
/**
 * @format
 * @author: luckybo
 * @Date: 2019-09-26 17:49
 * @description：create a file named swagger.config.js for user
 * @update: luckybo-2021-03-27 17
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var inquirer_1 = __importDefault(require("inquirer"));
var chalk_1 = __importDefault(require("chalk"));
var figlet_1 = __importDefault(require("figlet"));
var ConstName_1 = require("../configs/ConstName");
var fs = require('fs');
/**
 * 初始化生成配置文件
 */
function init() {
    if (fs.existsSync(ConstName_1.TargetPath)) {
        //  连续提问
        inquirer_1.default
            .prompt([
            {
                name: 'init-confirm',
                type: 'confirm',
                message: 'swagger.config.js is already existed. Are you sure overwrite it?',
                validate: function (input) {
                    if (input !== 'y' && input !== 'n') {
                        return 'Please input y or n!';
                    }
                    return true;
                }
            }
        ])
            .then(function (answers) {
            if (answers['init-confirm']) {
                generateConfigFile();
            }
        })
            .catch(function (err) {
            console.log(chalk_1.default.red(err));
            process.exit(0);
        });
        return;
    }
    generateConfigFile();
}
exports.default = init;
/**
 * 为用户生成一份默认配置文件
 */
function generateConfigFile() {
    try {
        figlet_1.default('swagger cli', function (err, data) {
            if (err) {
                console.log(chalk_1.default.red('Some thing about figlet is wrong!'));
            }
            console.log(chalk_1.default.yellow(data));
            var content = fs.readFileSync(ConstName_1.DefaultConfigPath, 'utf8');
            fs.writeFileSync(ConstName_1.TargetPath, content, 'utf8');
            console.log(chalk_1.default.green('初始化完成'));
            process.exit(0);
        });
    }
    catch (err) {
        console.log(chalk_1.default.red(err));
        process.exit(0);
    }
}
